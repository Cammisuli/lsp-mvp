<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>dev.nrwl.lsp-mvp</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Lsp Mvp</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="support@yourcompany" url="https://www.yourcompany.com">Nrwl</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
   LSP MVP lorem lorem
   LSP MVP lorem lorem
   LSP MVP lorem lorem
   LSP MVP lorem lorem
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
        <preloadingActivity implementation="dev.nrwl.lspmvp.Preloader" id="dev.nrwl.lspmvp.Preloader"/>
        <postStartupActivity implementation="dev.nrwl.lspmvp.Postloader" />

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon -->
        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                order="first" />

        <!-- needed for completion -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="JSON"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="LSPAnnotator" language="JSON"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>
    </extensions>

    <actions>
        <!-- needed for hover -->
        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">
        </action>

        <!-- needed for find references -->
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>
    </actions>
    <applicationListeners>
        <!-- required for lsp file sync -->
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>


        </idea-plugin>